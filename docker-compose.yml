version: "3.8"
services:

  ### APP API ###

  #auth_api
  auth_api:
    image: reddot_auth-api
    build:
      context: ms/authenticationManagementService
      dockerfile: Dockerfile
    container_name: reddot_authentication_api
    ports:
      - "10000:10000"
    environment:
      - spring.profiles.active=demo
      - spring.config.import=configserver:http://spring-config-server:11000/
      - eureka.client.serviceUrl.defaultZone=http://reddotSpringEureka:11001/eureka
      - keycloak.auth-server-url=http://keycloakServer:11003
      - opentracing.jaeger.http-sender.url=http://reddotJaeger:14268/api/traces
    depends_on:
      spring-config-server:
        condition: service_healthy
      spring-gateway-server:
        condition: service_healthy
    networks:
      - reddot_network


  #topic api
  topic_api:
    image: reddot_topic-api
    build:
      context: ms/topicManagementService
      dockerfile: Dockerfile
    container_name: reddot_topic_api
    ports:
      - "10002:10002"
    environment:
      - spring.profiles.active=demo
      - eureka.client.serviceUrl.defaultZone=http://reddotSpringEureka:11001/eureka
      - spring.datasource.url=jdbc:mysql://topicDbmysql:10100/topic?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      - keycloak.auth-server-url=http://keycloakServer:11003
      - opentracing.jaeger.http-sender.url=http://reddotJaeger:14268/api/traces
      - spring.rabbitmq.host=rabbitmq
    depends_on:
      spring-gateway-server:
        condition: service_healthy
    networks:
      - reddot_network


  ### DATABASES ###

  # topic database
  topic_db:
    image: mysql:latest
    container_name: topicDbmysql
    environment:
      - MYSQL_TCP_PORT=10100
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=topic
    ports:
      - 10100:10100
    networks:
      - reddot_network

  board_db:
    image: mysql:latest
    container_name: board_db_mysql
    environment:
      - MYSQL_TCP_PORT=10101
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=board
    ports:
      - 10101:10101
    networks:
      - reddot_network

  thread_db:
    image: mysql:latest
    container_name: thread_db_mysql
    environment:
      - MYSQL_TCP_PORT=10102
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=thread
    ports:
      - 10102:10102
    networks:
      - reddot_network

  message_db:
    image: mysql:latest
    container_name: message_db_mysql
    environment:
      - MYSQL_TCP_PORT=10103
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=message
    ports:
      - 10103:10103
    networks:
      - reddot_network

  reply_message_db:
    image: mysql:latest
    container_name: reply_message_db_mysql
    environment:
      - MYSQL_TCP_PORT=10104
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=replyMessage
    ports:
      - 10104:10104
    networks:
      - reddot_network

  stat_db:
    image: mysql:latest
    container_name: stat_db_mysql
    environment:
      - MYSQL_TCP_PORT=10105
      - MYSQL_ROOT_PASSWORD=rootroot
      - MYSQL_DATABASE=stat
    ports:
      - 10105:10105
    networks:
      - reddot_network


  ### EDGES ###

  # spring config
  spring-config-server:
    image: reddot_spring-cloud-config
    build:
      context: edge/springConfigServer
      dockerfile: Dockerfile
    container_name: reddot_spring_config
    ports:
      - 11000:11000
    environment:
      - eureka.client.serviceUrl.defaultZone=http://spring-eureka-server:11001/eureka
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces
    networks:
      - reddot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://spring-config-server:11000/actuator/health"] 
      interval: 10s
      timeout: 5s
      retries: 5

  #spring eureka
  spring-eureka-server:
    image: reddot_spring-cloud-eureka
    build:
      context: edge/springEurekaServer
      dockerfile: Dockerfile
    container_name: reddotSpringEureka
    ports:
      - "11001:11001"
    networks:
      - reddot_network

  #spring gateway
  spring-gateway-server:
    image: reddot_spring-cloud-gateway
    build:
      context: edge/springGatewayServer
      dockerfile: Dockerfile
    container_name: reddotSpringGateway
    ports:
      - "11002:11002"
    environment:
      - spring.config.import=configserver:http://spring-config-server:11000/
      - eureka.client.serviceUrl.defaultZone=http://reddotSpringEureka:11001/eureka
      - opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces
    depends_on:
      spring-config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11002/actuator/health"] 
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - reddot_network

  # rabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - .\edge\rabbitmq\data\:/var/lib/rabbitmq/
        - .\edge\rabbitmq\log\:/var/log/rabbitmq
    networks:
        - reddot_network

  #keycloack
  keycloakServer:
    image: quay.io/keycloak/keycloak:21.1.1
    hostname: reddotKeycloak
    container_name: reddotKeycloak
    ports:
      - "11003:11003"
    environment:
      KEYCLOAK_ADMIN: admin 
      KEYCLOAK_ADMIN_PASSWORD: admin

    command: 
      - start-dev
      - --http-port=11003
      - --import-realm

    volumes:
      - .\edge\keycloak\realm-reddot-export.json:/opt/keycloak/data/import/realm.json
    networks:
      - reddot_network

  #prometheus
  prometheus:
    image: prom/prometheus
    container_name: reddotPrometheus
    volumes:
      - .\edge\prometheus\prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 11004:9090
    environment:
      - eureka.client.serviceUrl.defaultZone=http://spring-eureka-server:11001/eureka
    networks:
      - reddot_network

  #jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: reddotJaeger
    ports:
      - "11005:16686"
      - 6831:6831/udp
      - 6832:6832/udp
      - 14268:14268
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    networks:
      - reddot_network

networks:
  reddot_network:
    driver: bridge